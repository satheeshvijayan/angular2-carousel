{"version":3,"sources":["../../src/dom-change.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,YAAA,EAAyB,MAAA,EAAO,MAAO,eAAA,CAAgB;AAGvF;IAKE,4BAAoB,UAAsB;QAA1C,iBAaC;QAbmB,eAAU,GAAV,UAAU,CAAY;QAFlC,cAAS,GAAG,IAAI,YAAY,EAAE,CAAC;QAGrC,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QAE9C,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,CAAC,UAAC,SAA2B;YAC5D,SAAS,CAAC,OAAO,CAAC,UAAC,QAAwB,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACjF,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE;YAC5B,UAAU,EAAE,IAAI;YAChB,SAAS,EAAE,IAAI;YACf,aAAa,EAAE,IAAI;SACpB,CAAC,CAAC;IACL,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC;IACI,6BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,aAAa;iBACxB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAF6F,CAE7F,CAAC;IACK,iCAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAC/B,CAAC;IACF,yBAAC;CAnCD,AAmCC,IAAA;SAnCY,kBAAkB","file":"dom-change.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\n\n\nexport class DomChangeDirective implements OnDestroy {\n  private changes: MutationObserver;\n\n   public domChange = new EventEmitter();\n\n  constructor(private elementRef: ElementRef) {\n    const element = this.elementRef.nativeElement;\n\n    this.changes = new MutationObserver((mutations: MutationRecord[]) => {\n        mutations.forEach((mutation: MutationRecord) => this.domChange.emit(mutation));\n      }\n    );\n\n    this.changes.observe(element, {\n      attributes: true,\n      childList: true,\n      characterData: true\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.changes.disconnect();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[domChange]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'domChange': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}